{"version":3,"file":"Test.js","sourceRoot":"","sources":["../Test.ts"],"names":[],"mappings":"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","sourcesContent":["class Test extends HoloplayApp {\r\n\r\n\r\n\r\n  protected group:THREE.Group;\r\n  protected cubes:THREE.Mesh[];\r\n  protected time:number = 0;\r\n  protected light;\r\n  protected bg:THREE.Mesh;\r\n  constructor(quilt:{width:number,height:number,nbX:number,nbY:number},mode:any=\"normal\"){\r\n    super(quilt,mode);\r\n\r\n    this.renderer.shadowMap.enabled = true;\r\n\r\n    //this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n    var light = this.light = new THREE.SpotLight(0xffffff,1)//THREE.DirectionalLight(0xFFFFFF,2);\r\n    light.castShadow = true;\r\n    light.angle = 0.78;//Math.PI*0.19\r\n    light.position.set (0, 0, 20);\r\n    light.penumbra = 0.5;\r\n    light.distance = 4000;\r\n\r\n    //light.shadow.radius = 0.05\r\n    light.shadow.mapSize.width = 512*4;  // default\r\n    light.shadow.mapSize.height = 512*4; // default\r\n    //light.shadow.camera.near = 0.5;       // default\r\n    //light.shadow.camera.far = 500\r\n    this.camera.add(light);\r\n    this.scene.add(this.camera);\r\n\r\n    var ambientLight = new THREE.AmbientLight(0xFFFFFF, 0.3);\r\n    this.scene.add(ambientLight);\r\n\r\n\r\n    var bgGroup = new THREE.Group();\r\n    this.scene.add(bgGroup);\r\n\r\n    var cubes = this.cubes = [];\r\n    var group = this.group = new THREE.Group();\r\n    //var cubeGeometry = new THREE.CubeGeometry(2,2,2)//THREE.SphereGeometry(1,30,30);\r\n    var cubeGeometry = new THREE.SphereGeometry(5,50,50);\r\n    var cubeMaterial = new THREE.MeshLambertMaterial()//{opacity:0.5,transparent:true});\r\n\r\n    var bg = this.bg = new THREE.Mesh(new THREE.PlaneGeometry(1000,1000,1,1),new THREE.MeshStandardMaterial({color:0xffffff}))\r\n    bg.position.z = -150;\r\n    bg.receiveShadow = true;\r\n    //bgGroup.add(ambientLight);\r\n    bgGroup.add(bg);\r\n\r\n    var d = 25;\r\n    var d2 = d/2;\r\n    var n\r\n    var c;\r\n    var scale;\r\n    for(var i = 0; i < 15; i++){\r\n\r\n      c = new THREE.Color(Math.random(),Math.random(),Math.random()).getHex();\r\n      //console.log(c)\r\n      cubes.push(new THREE.Mesh(cubeGeometry, new THREE.MeshPhysicalMaterial({color:c,metalness:0.5+Math.random()*0.25,roughness:Math.random()*0.25 }))) //cubeMaterial));\r\n\r\n\r\n      //cubes[i].frustumCulled  = false;\r\n      cubes[i].castShadow = true;\r\n        cubes[i].receiveShadow = true;\r\n      //cubes[i].material.needsUpdate = true;\r\n      cubes[i].position.set(d2-Math.random()*d,d2- Math.random()*d,d2- Math.random()*d);\r\n      cubes[i].rotation.set(Math.random(),Math.random(),Math.random());\r\n      //n = 1.5 + Math.random()*1\r\n\r\n      //scale = (window.innerHeight*0.5 - 64) / (28.888 );\r\n      scale = 1+Math.random();\r\n      cubes[i].s = scale;\r\n      cubes[i].a = Math.random() * Math.PI * 2;\r\n      cubes[i].scale.set(scale,scale,scale);\r\n      group.add(cubes[i]);\r\n    }\r\n    this.scene.add(group);\r\n\r\n  }\r\n\r\n  public update():void{\r\n    //this.bg.rotation.y += 0.01;\r\n    this.time += 0.01;\r\n\r\n    const group = this.group;\r\n    const cubes:any[] = this.cubes;\r\n\r\n    //this.light.position.y = 1 + Math.sin(this.time*5);\r\n    group.rotation.y += 0.001;\r\n    group.rotation.x += 0.0075;\r\n    group.rotation.z += 0.0015;\r\n    //group.position.z = 10+Math.sin(this.time) *10;\r\n\r\n    let i,len = cubes.length;\r\n    let n;\r\n    for(i = 0; i < len; i++){\r\n      n = cubes[i].s + Math.sin(this.time*(1+i*0.1) + cubes[i].a)*0.5;\r\n      cubes[i].scale.set(n,n,n);\r\n      cubes[i].rotation.x += 0.01;\r\n      cubes[i].rotation.y += 0.02;\r\n      cubes[i].rotation.z += 0.03;\r\n   }\r\n\r\n   super.update();\r\n  }\r\n\r\n\r\n}\r\n"]}
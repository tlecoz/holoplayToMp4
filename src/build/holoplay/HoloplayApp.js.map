{"version":3,"file":"HoloplayApp.js","sourceRoot":"","sources":["../../holoplay/HoloplayApp.ts"],"names":[],"mappings":"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","sourcesContent":["class HoloplayApp {\r\n\r\n  protected scene:THREE.Scene;\r\n  protected camera:THREE.PerspectiveCamera;\r\n  protected renderer:THREE.WebGLRenderer;\r\n  public holoplay:HoloPlay;\r\n  public ctx:WebGLRenderingContext;\r\n\r\n\r\n\r\n\r\n  constructor(quilt:{width:number,height:number,nbX:number,nbY:number},holoAppType:string=HoloAppType.HOLOGRAM){\r\n\r\n    var fov = 35;\r\n    this.scene = new THREE.Scene();\r\n    this.camera = new THREE.PerspectiveCamera(fov, window.innerWidth/window.innerHeight, 1, 1000000);\r\n    this.camera.position.set(0,0,this.camera.getFocalLength());\r\n    console.log(this.camera.getFocalLength())\r\n    this.renderer = new THREE.WebGLRenderer({alpha:true,preserveDrawingBuffer: true});\r\n    this.ctx = this.renderer.context;\r\n\r\n    this.renderer.setClearAlpha(0);\r\n    this.renderer.setClearColor(new THREE.Color(0),0);\r\n    this.renderer.autoClear = true;\r\n  \r\n    document.body.appendChild(this.renderer.domElement);\r\n\r\n    var th = this;\r\n    window.addEventListener(\"resize\",function(){ th.holoplay.onResize(); })\r\n\r\n    this.holoplay = new HoloPlay(this.scene,this.camera,this.renderer,holoAppType);\r\n    this.holoplay.init(quilt.width,quilt.height,quilt.nbX,quilt.nbY);\r\n    this.holoplay.onResize();\r\n  }\r\n\r\n  public set onReady(f:Function){this.holoplay.eppRom.onReady = f;}\r\n\r\n  public get parallaxRatio():number{return this.holoplay.depthRatio}\r\n  public set parallaxRatio(n:number){this.holoplay.depthRatio = n;}\r\n\r\n  public getFullscreen():void{ this.renderer.domElement.requestFullscreen(); }\r\n  public useBlackBorderAroundFullscreen(borderSize:number=100){ this.holoplay.useBlackBorderAroundFullscreen(borderSize); }\r\n\r\n\r\n  public get useClassicRendering():boolean{return this.holoplay.useClassicRendering;}\r\n  public set useClassicRendering(b:boolean){this.holoplay.useClassicRendering = b;}\r\n\r\n\r\n  public get fieldOfVision():number{  return this.camera.fov; }\r\n  public set fieldOfVision(n:number){\r\n    if(n<1) n=1;\r\n    if(n>179) n = 179;\r\n    this.camera.fov = n;\r\n    this.camera.updateProjectionMatrix();\r\n  }\r\n\r\n\r\n  public addEventListener(eventName:string,func:any):void{ this.renderer.domElement.addEventListener(eventName,func); }\r\n\r\n  public update():void{\r\n\r\n    this.holoplay.update();\r\n   }\r\n\r\n\r\n\r\n\r\n}\r\n"]}